name: Front pipeline
on:
  push:
    branches: [main]

env:
    IMAGE_NAME: abid127/frontend-api
    BUILD_NUMBER: ${{ github.run_number }}

jobs:
  # 1: Test job
  unit-test-job:
     runs-on: ubuntu-latest
     steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install dependencies
        run: npm i

      # npm run test
      - name: run unit tests
        run: npm run test
  
  code-quality-test-job:
      runs-on: ubuntu-latest
      steps:
        - name: checkout
          uses: actions/checkout@v4

        - name: install dependencies
          run: npm i

      # npm run lint
        - name: run unit tests
          run: npm run lint

  # 2: Build and push job       
  build-and-push:
        runs-on: ubuntu-latest
        needs: [unit-test-job, code-quality-test-job]
        steps:
          - name: checkout
            uses: actions/checkout@v4

          - name: build docker image
            run: docker build -t abid127/frontend-api --build-arg VITE_API_URL=${{ vars.VITE_API_URL }}  .

          - name: login to dockerhub
            uses: docker/login-action@v3
            with:
                  username: ${{ vars.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
          
          - name: tag image With version number
            run: docker tag ${{env.IMAGE_NAME}} ${{env.IMAGE_NAME}}:${{ env.BUILD_NUMBER }}
    
          - name: push image with version number
            run: docker push ${{env.IMAGE_NAME}}:${{ env.BUILD_NUMBER }}
    
          - name: push image docker 
            run: docker push ${{env.IMAGE_NAME}}:latest

  # 3: Deploy job
  deployment:
            runs-on: ubuntu-latest
            needs: build-and-push
            steps:          
                - name: connect via ssh and execute commands
                  id: deploy
                  uses: appleboy/ssh-action@v1
                  with:
                        host: ${{ secrets.HOST }}
                        username: user
                        password: ${{ secrets.PASSWORD }}
                        script: |
                              cd /home/user/devops-project/front
                              sudo git pull
                              sudo docker compose pull
                              sudo docker compose up -d --force-recreate --remove-orphans || exit 1




